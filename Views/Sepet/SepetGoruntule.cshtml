@model SepetViewModel
@{
    ViewData["Title"] = "Sepet Görüntüle";
    Layout = "_Layout2";
}
<!doctype html>
<html lang="en" data-bs-theme="auto">
<head>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" integrity="sha384-k6RqeWeci5ZR/Lv4MR0sA0FfDOMO2xrLa0tjF6x3r5yB1Jhb8yho5WroZGPw7iT2" crossorigin="anonymous">

    <style>
        body {
            margin-top: 60px;
        }

        .bilet {
            display: flex;
            align-items: center;
            margin: 10px 0;
            padding: 10px;
            height: 130px;
            width: 130px;
            border-radius: 10px;
            border: 1px solid #E0E0E0;
            box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.1);
            background-color: #f9f9f9;
        }

        .bilet-img {
            width: 110px;
            height: 110px;
            border-radius: 10px;
            border: 1px solid #ddd;
            object-fit: cover;
        }

        .pad-left {
            padding-left: 15px;
        }

        .mob-text {
            margin: 0;
            font-size: 16px;
            font-weight: 500;
            margin-left: 160px;
        }

        .row.d-flex {
            display: flex;
            align-items: center;
        }

        .plus-minus {
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .plus, .minus {
            font-size: 20px;
            color: #673AB7;
            cursor: pointer;
        }

            .plus:hover, .minus:hover {
                color: #311B92;
            }

        .my-auto {
            display: flex;
            align-items: center;
        }

        #cnt1 {
            font-size: 18px;
            font-weight: 600;
        }

        .text-right {
            text-align: right;
        }

        .border-top {
            border-top: 1px solid #EEEEEE !important;
            margin-top: 20px;
            padding-top: 15px;
        }

        .card {
            margin: 40px 0px;
            padding: 40px 50px;
            border-radius: 20px;
            border: 2px solid #673AB7;
            box-shadow: 0px 10px 20px rgba(0, 0, 0, 0.2), 0px 6px 6px rgba(0, 0, 0, 0.1);
            background: linear-gradient(to bottom right, #ffffff, #f3e5f5);
            transition: transform 0.3s ease, box-shadow 0.3s ease;
        }

            .card:hover {
                transform: translateY(-10px);
                box-shadow: 0px 15px 30px rgba(0, 0, 0, 0.3), 0px 10px 10px rgba(0, 0, 0, 0.2);
            }

        input, textarea {
            background-color: #F3E5F5;
            padding: 8px 15px;
            width: 100%;
            border-radius: 5px !important;
            box-sizing: border-box;
            border: 1px solid #F3E5F5;
            font-size: 15px !important;
            color: #000 !important;
            font-weight: 300;
        }

            input:focus, textarea:focus {
                box-shadow: none !important;
                border: 1px solid #9FA8DA;
                outline-width: 0;
                font-weight: 400;
            }

        button:focus {
            box-shadow: none !important;
            outline-width: 0;
        }

        .pay {
            width: 80px;
            height: 40px;
            border-radius: 5px;
            border: 1px solid #673AB7;
            margin: 10px 20px 10px 0px;
            cursor: pointer;
            box-shadow: 1px 5px 10px 1px rgba(0,0,0,0.2);
        }

        .gray {
            filter: grayscale(100%);
            color: #E0E0E0;
        }

            .gray .pay {
                box-shadow: none;
            }

        #tax {
            border-top: 1px lightgray solid;
            margin-top: 10px;
            padding-top: 10px;
        }

        .btn-blue {
            border: none;
            border-radius: 10px;
            background-color: #673AB7;
            color: #fff;
            padding: 8px 15px;
            margin: 20px 0px;
            cursor: pointer;
        }

            .btn-blue:hover {
                background-color: #311B92;
                color: #fff;
            }

        #checkout {
            float: left;
        }

        #check-amt {
            float: right;
        }

        .form-row {
            display: flex;
            justify-content: space-between;
        }

        .form-group {
            margin-right: 30px;
        }

        .delete-button {
            background-color: #eee;
            color: white;
            border: none;
            border-radius: 5px;
            padding: 8px 12px;
            cursor: pointer;
            margin-top: 5px;
        }

            .delete-button:hover {
                background-color: pink;
            }

        .plus-minus {
            margin: 0;
            font-size: 16px;
            font-weight: 500;
            margin-left: 60px;
        }

        .fa-trash {
            font-size: 24px;
        }
    </style>

</head>
<body>
    <div class="container px-4 py-5 mx-auto">
        <div class="row d-flex justify-content-center">
            <div class="col-2">
                <h4 class="heading">Sepetim</h4>
            </div>
            <div class="col-7">
                <div class="row text-right">
                    <div class="col-4">
                        <h6 class="mt-2">Miktar</h6>
                    </div>
                    <div class="col-4">
                        <h6 class="mt-2">Fiyat</h6>
                    </div>
                </div>
            </div>
        </div>

        @foreach (var item in Model.SepetDetaylar)
        {
            <div class="row d-flex justify-content-center border-top">
                <div class="col-5 col">
                    <div class="row d-flex justify-content-center">
                        <div class="bilet">
                            <img src="~/images/singers/icons/@item.BiletGorselPath" class="bilet-img" alt="Sanatçı Fotoğrafı">
                        </div>
                        <div class="my-auto flex-column d-flex mt-2 align-content-center" style="padding:10px">
                            <h6 class="text">@item.KonserAdi</h6>
                            <p class="text">@item.SanatciAdi</p>
                        </div>
                    </div>
                </div>
                <div class="my-auto col-7">
                    <div class="row">
                        <div class="col-2 d-flex justify-content-end align-items-center">
                            <div class="plus-minus">
                                <span class="vsm-text plus" data-konserid="@item.KonserID">+</span>
                                <p class="mb-0" id="cnt1">@item.Miktar</p>
                                <span class="vsm-text minus" data-konserid="@item.KonserID">-</span>
                            </div>
                            <div class="col-5">
                                <p class="mob-text">@item.KategoriAdi</p>
                            </div>
                        </div>
                        <div class="col-3 text-right">
                            <h6 class="mob-text">@item.Fiyat.ToString("C")</h6>
                        </div>
                    </div>
                    <div class="col-2 text-right">
                        <form asp-action="BiletSil" method="post">
                            <input type="hidden" name="konserID" value="@item.KonserID" />
                            <input type="hidden" name="kategoriID" value="@item.KategoriID" />
                            <button class="delete-button">
                                <img src="~/images/trash-2.svg" alt="sil-buton" />
                            </button>
                        </form>
                    </div>
                </div>
            </div>
        }

        <div class="row justify-content-center">
            <div class="col-lg-12">
                <div class="card">
                    <div class="row">
                        <div class="col-lg-3 radio-group">
                            <div class="row d-flex px-3 radio">
                                <img class="pay" src="https://i.imgur.com/WIAP9Ku.jpg">
                                <p class="my-auto">Kredi Kartı</p>
                            </div>
                        </div>
                        <form asp-action="OdemeYap" method="post" class="mt-4">
                            <input type="hidden" name="sepetID" value="@Model.SepetID" />
                            <input type="hidden" name="kart_id" value="@Model.KartID" />
                            <input type="hidden" name="sahip_ismi" value="@Model.SahipIsmi" />
                            <input type="hidden" name="sahip_soyismi" value="@Model.SahipSoyismi" />
                            <input type="hidden" name="kart_no" value="@Model.KartNo" />
                            <input type="hidden" name="skt" value="@Model.SKT" />
                            <input type="hidden" name="cvv" value="@Model.CVV" />
                            <input type="hidden" id="totalPriceInput" name="totalPrice" />

                            <div class="col-lg-5">
                                <div class="row px-2">
                                    <div class="form-row">
                                        <div class="form-group col-md-6">
                                            <label asp-for="SahipIsmi" class="form-control-label">Kart Üzerindeki İsim</label>
                                            <input type="text" asp-for="SahipIsmi" placeholder="John" required>
                                            <span asp-validation-for="SahipIsmi" class="text-danger"></span>
                                        </div>
                                        <div class="form-group col-md-6">
                                            <label asp-for="SahipSoyismi" class="form-control-label">Kart Üzerindeki Soyisim</label>
                                            <input type="text" asp-for="SahipSoyismi" placeholder="Doe" required>
                                            <span asp-validation-for="SahipSoyismi" class="text-danger"></span>
                                        </div>
                                    </div>
                                    <div class="form-group col-md-6">
                                        <label asp-for="KartNo" class="form-control-label">Kart Numarası</label>
                                        <input type="text" asp-for="KartNo" placeholder="1111 2222 3333 4444" required>
                                        <span asp-validation-for="KartNo" class="text-danger"></span>
                                    </div>
                                </div>
                                <div class="row px-2">
                                    <div class="form-group col-md-6">
                                        <label asp-for="SKT" class="form-control-label">Son Kullanma Tarihi:</label>
                                        <input type="text" asp-for="SKT" placeholder="MM/YYYY" required pattern="(0[1-9]|1[0-2])\/20[2-9][0-9]" minlength="7" maxlength="7" title="Lütfen geçerli bir son kullanma tarihi giriniz (MM/YYYY)">
                                        <span asp-validation-for="SKT" class="text-danger"></span>
                                    </div>

                                    <div class="form-group col-md-6">
                                        <label asp-for="CVV" class="form-control-label">CVV</label>
                                        <input type="text" asp-for="CVV" placeholder="***" required>
                                        <span asp-validation-for="CVV" class="text-danger"></span>
                                    </div>
                                </div>
                            </div>
                            <div class="col-lg-4 mt-2">
                                <div class="row d-flex justify-content-between px-4" id="tax">
                                    <p class="mb-1 text-left">Toplam: </p>
                                    <h6 class="mb-1 text-left" id="toplamFiyat">@Model.ToplamFiyat.ToString("C")</h6>
                                    <p class="mb-1 text-left">İndirim: </p>
                                    <h6 class="mb-1 text-left" id="finalFiyat">@Model.</h6>
                                </div>
                                <br />
                                <button class="btn btn-dark">
                                    <span>
                                        <span id="checkout">Ödeme Yap</span>
                                    </span>
                                </button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const plusButtons = document.querySelectorAll('.plus');
            const minusButtons = document.querySelectorAll('.minus');
            const toplamFiyatElem = document.getElementById('toplamFiyat');
            const totalPriceInput = document.getElementById('totalPriceInput');
            const itemElements = document.querySelectorAll('.row.d-flex');

            function updateItemQuantity(konserID, miktar) {
                fetch('/Sepet/UpdateBiletMiktar', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                    },
                    body: JSON.stringify({ konserID: konserID, miktar: miktar })
                })
                    .then(response => {
                        if (!response.ok) {
                            throw new Error('Network response was not ok');
                        }
                        return response.json();
                    })
                    .then(data => {
                        if (data.success) {
                            // Toplam fiyatı güncellemek için sunucuya istek gönder
                            fetch('/Sepet/GetTotalPrice', {
                                method: 'POST',
                                headers: {
                                    'Content-Type': 'application/json',
                                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                                },
                                body: JSON.stringify({})
                            })
                                .then(response => response.json())
                                .then(data => {
                                    if (data.success) {
                                        document.getElementById('toplamFiyat').textContent = data.totalPrice.toFixed(2) + ' ₺';
                                        totalPriceInput.value = data.totalPrice.toFixed(2); // Gizli input değerini güncelle
                                    } else {
                                        alert('Bir hata oluştu: ' + (data.message || 'Bilinmeyen hata'));
                                    }
                                })
                                .catch(error => {
                                    console.error('Fetch error:', error);
                                    alert('Bir hata oluştu: ' + error.message);
                                });
                        } else {
                            alert('Bir hata oluştu: ' + (data.message || 'Bilinmeyen hata'));
                        }
                    })
                    .catch(error => {
                        console.error('Fetch error:', error);
                        alert('Bir hata oluştu: ' + error.message);
                    });
            }

            plusButtons.forEach(button => {
                button.addEventListener('click', function () {
                    const quantityElement = this.closest('.row').querySelector('.miktar');
                    const konserID = this.dataset.konserid;
                    if (quantityElement) {
                        let miktar = parseInt(quantityElement.textContent, 10);
                        quantityElement.textContent = ++miktar;
                        updateItemQuantity(konserID, miktar);
                    }
                });
            });

            minusButtons.forEach(button => {
                button.addEventListener('click', function () {
                    const quantityElement = this.closest('.row').querySelector('.miktar');
                    const konserID = this.dataset.konserid;
                    if (quantityElement) {
                        let miktar = parseInt(quantityElement.textContent, 10);
                        if (miktar > 1) {
                            quantityElement.textContent = --miktar;
                            updateItemQuantity(konserID, miktar);
                        }
                    }
                });
            });

            // İlk yüklendiğinde toplam fiyatı hesapla
            fetch('/Sepet/GetTotalPrice', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]').value
                },
                body: JSON.stringify({})
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        document.getElementById('toplamFiyat').textContent = data.totalPrice.toFixed(2) + ' ₺';
                        totalPriceInput.value = data.totalPrice.toFixed(2);
                    } else {
                        alert('Bir hata oluştu: ' + (data.message || 'Bilinmeyen hata'));
                    }
                })
                .catch(error => {
                    console.error('Fetch error:', error);
                    alert('Bir hata oluştu: ' + error.message);
                });
        });
    </script>
</body>
</html>